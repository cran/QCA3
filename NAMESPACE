export(boolIntersect, directCalibration,
       constrReduce,coincid,consistency, consistGap, coverage, CSA, cs_truthTable,
       excludeCSA,
       findNoCSA, fs_truthTable, fsnot, fsor, fsand,fsplot,
#       fsgof.test, fsgof.descr,
       implicantsToDF,
       mv_truthTable,
       reduce, remainderReduce,
       SA, simplifyingAssumption, suffnec, setOUT,
       thresholdssetter)
S3method(coverage, QCA)
S3method(coverage, default)
S3method(consistency, QCA)
S3method(consistency, default)
S3method(print, coincid)
S3method(print, PIChart)
S3method(print, QCA)
S3method(print, remainders)
S3method(print, SA)
#S3method(plot, QCA)
S3method(print, suffnec)
S3method(print, summary.QCA)
S3method(print, truthTable)
S3method(reduce, data.frame)
S3method(reduce, default)
S3method(reduce, formula)
S3method(reduce, truthTable)
S3method(sort, fs_truthTable)
S3method(sort, truthTable)
S3method(summary, QCA)
S3method('[',QCA)
S3method(update,QCA)
import(lpSolveAPI)
importFrom("graphics", "abline", "barplot", "box", "mtext", "plot")
importFrom("stats", "addmargins", "aggregate", "as.formula", "cutree",
            "dist", "hclust", "model.frame", "model.matrix",
            "model.response", "na.exclude", "na.omit", "pf", "qbeta",
            "qnorm", "terms")
importFrom("utils", "combn")
